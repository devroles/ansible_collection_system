name: tox

"on":
  push:
  pull_request: {}
  schedule:
    - cron: '12 0 * * *'

env:
  TOX_ANSIBLE_DRIVER: docker
  ANSIBLE_COLLECTIONS_PATH: ~/.ansible/:~/work/
  checkout_path: ansible_collections/devroles/system

jobs:
  collect:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.collection.outputs.tox-envs }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - id: collection
        uses: greg-hellings/tox-list@v1
        with:
          tox-args: --ansible-driver docker --ansible-driver vagrant --ansible-driver podman

  build:
    needs: collect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJson(needs.collect.outputs.scenarios) }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: update submodules
        run: |-
          set -ex
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Make space
        uses: greg-hellings/make-space@v1
      - name: Install dependencies
        run: |
          set -x
          cd "${{ env.checkout_path }}"
          python -m pip install --upgrade tox
          sudo apt update
          sudo apt install vagrant{,-cachier,-libvirt,-sshfs} libvirt-daemon libvirt-daemon-system libvirt-daemon-driver-qemu
          sudo groupadd libvirt || true
          sudo usermod -a -G libvirt $(whoami)
          ls -l /etc/qemu
          cat /etc/qemu/bridge.conf
          sudo chmod a+s /etc/qemu/bridge.conf
          sudo systemctl restart libvirtd
      - name: Run tox against ${{ matrix.scenario }}
        run: |
          set -ex
          id $(whoami)
          mv ansible_collections ~/work/
          cd ~/work/${{ env.checkout_path }}
          tox -e ${{ matrix.scenario }}
      - name: Try to run Vagrant directly
        if: ${{ failure() }}
        run: |
          set -ex
          cd ~/.cache/molecule/$(printf "${{ matrix.scenario }}" | cut -d- -f2,3 | sed -e 's#-#/#')
          vagrant destroy --force || true
          vagrant up || vagrant up

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.2.1
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}
      - name: Release artifacts to Git Hub
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./devroles-system*.tar.gz
          allowUpdates: true
          name: Release ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
