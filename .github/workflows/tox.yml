name: tox

"on":
  push:
  pull_request: {}
  schedule:
    - cron: '12 0 * * *'

env:
  TOX_ANSIBLE_DRIVER: docker
  ANSIBLE_COLLECTIONS_PATHS: ~/.ansible/:~/work/
  checkout_path: ansible_collections/devroles/system

jobs:
  collect:
    runs-on: ubuntu-20.04
    outputs:
      scenarios: ${{ steps.collection.outputs.scenarios }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          set -ex
          python -m pip install --upgrade tox
      - name: collect depenencies
        id: collection
        run: |
          set -ex
          json="["
          for x in $(tox -ql --ansible-driver docker --ansible-driver podman); do
            json="${json}\"${x}\","
          done
          json="${json%,}]"
          echo "::set-output name=scenarios::${json}"

  build:
    needs: collect
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJson(needs.collect.outputs.scenarios) }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: ${{ env.checkout_path }}
      - name: update submodules
        run: |-
          set -ex
          cd "${{ env.checkout_path }}"
          git submodule update --remote --recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          cd "${{ env.checkout_path }}"
          python -m pip install --upgrade tox
      - name: Run tox against ${{ matrix.scenario }}
        run: |
          set -ex
          mv ansible_collections ~/work/
          cd ~/work/${{ env.checkout_path }}
          sudo apt-get purge llvm*
          sudo rm -rf /usr/local/go1* /usr/share/{dotnet,rust} \
          /usr/local/julia* /usr/lib/firefox /usr/lib/llvm* /usr/share/gradle* \
          /usr/lib/google-cloud-sdk
          tox -e ${{ matrix.scenario }}

  release:
    needs: build
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: artis3n/ansible_galaxy_collection@v2.2.1
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}
      - name: Release artifacts to Git Hub
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./devroles-system*.tar.gz
          allowUpdates: true
          name: Rlease ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
