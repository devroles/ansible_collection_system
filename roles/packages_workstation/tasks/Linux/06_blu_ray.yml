- name: Create blu-ray config directories
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.config/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - aacs

- name: Download aacs files
  ansible.builtin.get_url:
    url: http://fvonline-db.bplaced.net/export/keydb_eng.zip
    dest: "/tmp/keydb_eng.zip"
    force: true
    validate_certs: false
    mode: 0644
  register: _packages_workstation_aacs_zip

- name: Unpack Blu-Ray content
  when: _packages_workstation_aacs_zip is changed  # noqa no-handler
  block:
    - name: Create temporary target dir
      ansible.builtin.tempfile:
        state: directory
      register: _blu_ray_tmp

    - name: Unload the file
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/keydb_eng.zip"
        dest: "{{ _blu_ray_tmp.path }}"
        mode: 0644

    - name: Upload KEYDB.cfg.header
      ansible.builtin.copy:
        src: KEYDB.cfg.header
        dest: "{{ _blu_ray_tmp.path }}/00_KEYDB.cfg.header"
        mode: 0644

    - name: Assemble parts
      ansible.builtin.assemble:
        src: "{{ _blu_ray_tmp.path }}"
        dest: "{{ ansible_user_dir }}/.config/aacs/KEYDB.cfg"
        mode: 0644

# - name: download bdplus archive
#  ansible.builtin.get_url:
#    url: http://www.labdv.com/aacs/libbdplus/bdplus-vm0.bz2
#    dest: "{{ ansible_user_dir }}/.config
#    force: true

# - name: extract archive
#  ansible.builtin.shell: tar xaf bdplus-vm0.bz2
#  args:
#    creates: "{{ ansible_user_dir }}/.config/bdplus"
#    chdir: "{{ ansible_user_dir }}?.config

# - name: set ownership on files
#  ansible.builtin.file:
#    dest: "{{ item }}"
#    recurse: true
#    owner: "{{ ansible_user_id }}"
#  with_items:
#    - "{{ ansible_user_dir }}/.config/bdplus"
#    - "{{ ansible_user_dir }}/.config/aacs"
