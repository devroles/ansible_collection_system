{% if jenkins_nginx_rate_limiting == "true" %}
limit_req_zone $binary_remote_addr zone=jenkins:{{ nginx_zone_cache_size }} rate={{ nginx_request_limit }};
limit_conn_zone $binary_remote_addr zone=addr:{{ nginx_zone_cache_size }};
{% endif %}

server_names_hash_bucket_size 6400;
upstream jenkins {
  server 127.0.0.1:8080 fail_timeout=0;
}

server {
  listen 80;
  server_name {{ service_name }};
  location @jenkins {
    proxy_http_version  1.1;
    proxy_connect_timeout       30s;
    proxy_send_timeout          120;
    proxy_read_timeout          120;
    client_max_body_size 35m;
    proxy_buffer_size 4k;
    proxy_buffers 8 32m;
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_pass              http://jenkins;
	  {% if jenkins_nginx_rate_limiting == "true" %}
    limit_req zone=jenkins burst={{ nginx_burst_queue }} nodelay;
    limit_conn addr  {{ nginx_max_connections_per_ip }};
    limit_rate_after {{ nginx_bandwidth_limit_after_size }};
    limit_rate       {{ nginx_max_bandwidth_outbound }};
    {% endif %}
  }

  location ~ "^/static/[0-9a-fA-F]{8}/(.*)" {

    #rewrite all static files into requests to the root
    #E.g /static/12345678/css/something.css will become /css/something.css
    rewrite "^/static/[0-9a-fA-F]{8}/(.*)" /$1 last;
  }

  location /userContent {
        #have nginx handle all the static requests to the userContent folder files
        #note : This is the $JENKINS_HOME dir
        root /var/lib/jenkins/;
        if (!-f $request_filename){
           #this file does not exist, might be a directory or a /**view** url
           rewrite (.*) /$1 last;
           break;
        }
        sendfile on;
  }

  location / {
        try_files $uri @jenkins;
  }
}
