- name: Load vars
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "vars/{{ ansible_distribution }}-{{
      ansible_distribution_major_version }}.yml"
    - vars/default.yml

- name: Install EPEL
  ansible.builtin.include_role:
    name: epel

- name: Install nginx packages
  ansible.builtin.package:
    name: "{{ webserver_packages }}"
    state: present
  become: true

- name: Create directory
  become: true
  ansible.builtin.file:
    name: /var/www/{{ item.tld }}
    owner: nginx
    mode: "0755"
    state: directory
  with_items: "{{ webserver_domains }}"

- name: Configure nginx to avoid dupes
  become: true
  ansible.builtin.template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"
  notify: Restart nginx

- name: Install nginx configurations for redirect
  become: true
  ansible.builtin.template:
    src: "0000_add_www_redirect.conf"
    dest: /etc/nginx/conf.d/0000_www_redirect_{{ item.tld }}.conf
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ webserver_domains }}"
  when: item.redirect | default(true)
  notify: Restart nginx

- name: Install nginx configurations for static serving
  become: true
  ansible.builtin.template:
    src: "0001_serve_port_80.conf"
    dest: /etc/nginx/conf.d/0001_serve_port_80_{{ item.tld }}.conf
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ webserver_domains }}"
  when: item.http | default(true)
  notify: Restart nginx

- name: Enable nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
  become: true

- name: Create encryption
  include_tasks: letsencrypt.yml
  with_items: "{{ webserver_domains }}"
  loop_control:
    loop_var: domain
  when: domain.https | default(true)

# TODO: configure SSL on host
- name: Instal nginx configurations for HTTPS serving
  become: true
  ansible.builtin.template:
    src: "0002_serve_port_443.conf"
    dest: /etc/nginx/conf.d/0002_serve_port_443_{{ item.tld }}.conf
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ webserver_domains }}"
  when: item.https | default(true)
  notify: Restart nginx

- name: Set SELinux options
  become: true
  ansible.posix.seboolean:
    name: "{{ item }}"
    persistent: true
    state: true
  notify: Restart nginx
  when: 'ansible_selinux.status == "enabled"'
  loop:
    - httpd_read_user_content  # allows it to serve user-mounted files
    - httpd_enable_homedirs  # allows it to serve from ~/
    - httpd_use_fusefs  # allows fuse-mounted systems, like USB drives
    - httpd_use_nfs  # Allows it to serve NFS shares
    - httpd_use_cifs  # Allows to read from a CIFS mount
