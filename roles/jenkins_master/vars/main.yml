# A set of command-line Java options to be passed into Jenkins. These values
# can be anything accepted either by Jenkins or by the JVM
jenkins_master_java_options:
  # Tell Java it is running on a headless system
  - -Djava.awt.headless=true
  # disables SNI extension in case of Java 1.7, which causes problems with SSL
  - -Djsse.enableSNIExtension=false
  # Allows all parameters to be passed between jobs in trigger pipelines
  - -Dhudson.model.ParametersAction.keepUndefinedParameters=true
  # Alows creation of synthetic users that exist only in Jenkins and not
  # external auth
  - -Dhudson.model.User.allowNonExistentUserToLogin=true
  # allows the creation of a synthetic/virtual user to be created via an Url.
  - -Dhudson.model.User.allowUserCreationViaUrl=true
  # Allows admin users to see the API tokens of all users
  - -Djenkins.security.ApiTokenProperty.showTokenToAdmins=true
  # adds performance log messages during Jenkins initialization.
  - -Djenkins.model.Jenkins.logStartupPerformance=true
  # helps in cases where SSH slave startup can block. See JENKINS-20108
  - -Djava.security.egd=file:/dev/./urandom
  # Needed for Jenkins 2.X to bypass SetupWizard.
  - -Djenkins.install.runSetupWizard=false
  # Needed to disable DNSMulticast
  - -Dhudson.DNSMultiCast.disabled=true
  # Increase max Java heap size
  - -Xmx{{ jenkins_master_heap_size }}

# A list of packages which should not be upgraded by yum. These packages will
# be added to a list in /etc/yum.conf on the target machine as packages whose
# versions need to be maintained at the currently installed versions in order
# to avoid updating them by means of a "yum update" run
jenkins_master_upgrade_blacklist:
  - jenkins

# Session timeout doesn't work through java options and has to pass as an
# argument. To support both session timeout and custon jenkins args without
# mistakenly override it, a proxy variable will be used.
_jenkins_master_args: >-
  --sessionTimeout={{ jenkins_master_session_timeout }}
  {{ jenkins_master_args }}

# This variable points to the file where the RPM version for specific packages
# (most importantly, the Jenkins RPM) can be pinned. For yum-based distros,
# like CentOS or RHEL <= 7, this is the yum conf file, but for Fedora and the
# like, this is the dnf conf file
jenkins_master_version_pin_file: >-
  /etc/{{ ( ansible_pkg_mgr == 'dnf' ) | ternary('dnf/dnf.conf', 'yum.conf') }}
